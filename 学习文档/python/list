1.创建list:
创建的可以是一个空的列表,也可以是一个有元素的列表
list = []
list = [1,2]

2.添加元素:
list.appned():是在末尾添加元素
list.insert(n, 4):在指定位置添加元素
list.extend(list1):合并两个list,list1中任然有元素

3.查看元素:
list.count(xx):查看某个元素在这个列表中的个数,如果元素不存在,则任然返回0
list.index(xxx):找到这个元素的坐标,若是有多个相同的元素,则返回的是第一个,若是找不到这个元素,则是会报错

4.删除元素:
list.pop():删除的是最后一个元素
list.pop(n):指定下标,删除指定的元素,若是元素不存在,则是会报错
list.remove(xx):删除list中的一个元素,若是有多个相同的元素,则是删除第一个
list.pop():有返回值,返回值是删除的末尾的元素
list.remove():没有返回值
del list[n]:删除指定下标对应的元素
del list:删除整个列表,删除后无法在进行访问

5.排序和反转:
list.reverse():列表反转
list.sort():列表排序,默认升许
list.sort(reverse=True):降序排序
注释:list中有字符串,数字的时候,不能进行排序,排序针对的是相同的类型\

6.操作:
len(list):
max(list):返回列表中最大的元素
min(list):最小的元素
list(seq):将元祖转换为list

7.enumerate用法:(打印元素对应的下标)

同时获取元素和下标:

list = [1,2,3,4,5,3]
for i, v in enumerate(list):
    print('index=%s, value=%s'%(i, v))

切片:
name[n:m]  切片是不包含后面那个元素的值（顾头不顾尾）
name[:m] 如果切片前面一个值缺省的话，从开头开始取
name[n:] 如果切片后面的值缺省的话，取到末尾
name[:] 如果全部缺省，取全部
name[n:m：s] s：步长  隔多少个元素取一次
步长是正数，从左往右取
步长是负数，从右往左取

8.列表生成式:
实例1：要生成list [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]可以用list(range(1, 11))：list = list(range(1,11))

实例2：生成[1x1, 2x2, 3x3, ..., 10x10]可以用  list = list(x * x for x in range(1,11))
实例3：for循环后面还可以加上if判断，这样我们就可以筛选出仅偶数的平方：list = list(x * x for x in range(1,11) if x%2== 0)
实例4：使用两层循环，可以生成全排列：
list = [m + n for m in 'ABC' for n in 'XYZ']
print(list)
输出结果：['AX', 'AY', 'AZ', 'BX', 'BY', 'BZ', 'CX', 'CY', 'CZ']
实例5：for循环其实可以同时使用两个甚至多个变量，比如dict的items()可以同时迭代key和value：
法一：
>>> d = {'x': 'A', 'y': 'B', 'z': 'C' }
>>> for k, v in d.items():
...     print(k, '=', v)
...
y = B
x = A
z = C
法二：
>>> d = {'x': 'A', 'y': 'B', 'z': 'C' }
>>> [k + '=' + v for k, v in d.items()]
['y=B', 'x=A', 'z=C']


head　first Python 总结：
1，列表是一个有序的对象集合
2，一个对象在另外一个对象中吗？用 in 来检查
3，从列表中删除对象 remove
remove:取一个对象值作为唯一参数。remove方法会从列表中删除指定数据值的第一次出现。

如果在列表中找到了这个数据值，就会从列表中删除包含这个值的对象（同时列表的大小减一）。如果在列表中没有找到这个数据值，会报错。

4，从列表中弹出对象 pop
pop:取一个可选的索引值（indexof）作为参数。pop方法根据对象的索引值从现有列表删除和返回一个对象。

如果调用pop时没有指定索引值，将删除和返回列表中的最后一个对象。如果指定了一个索引值，则会删除和返回那个位置上的对象。

如果列表为空或者调用pop时指定了一个不存在的索引值，会报错。

5，用对象扩展列表 extend
extend:取一个对象列表作为唯一参数。extend方法接收第二个列表，将其中的各个对象增加到现有列表。如果要将两个列表合并为一个列表，这个方法就非常有用。

6，在列表中插入一个对象 insert/append
insert:取一个索引值和一个对象作为参数。insert 方法将一个对象插入到现有列表中指定索引值的前面。

这样就可以将对象插入到现有列表的开头，或者插入到列表中的任何位置。要把对象插入到列表末尾，用append 。用法 num.insert(2,"abc")

7，如何复制一个数据结构？不要使用赋值操作符复制列表；应当使用copy方法。
赋值操作都指向同一个数据，如果修改一个列表，另一个也会改变；如果想让另一个变量引用一个现有列表，可以使用赋值操作（=）
copy:list2 = list1.copy() ；如果想建立现有列表中对象的副本，用他们初始化一个新列表，就一定要使用copy 方法

8，列表切片的使用【start:stop:step】不包含stop 索引值
step 为正数时，从右至左；step 为负数时，从左至右