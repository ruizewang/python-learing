在迭代操作或其他操作的时候，怎样只保留最后有限的几个历史记录:

保留有限历史记录:collections.deque。

在写查询元素的时候，会使用到yield表达式的生成器函数。这样可以将搜索过程代码和使用搜索结果代码解耦。

使用deque(maxlen=N)构造数据会新建一个固定大小的队列。当新的元素加入并且这个队列已经满的时候，
最老的元素会自动被移除掉.

例如：
>>> q = deque(maxlen=3)
>>> q.append(1)
>>> q.append(2)
>>> q.append(3)
>>> q
deque([1, 2, 3], maxlen=3)
>>> q.append(4)
>>> q
deque([2, 3, 4], maxlen=3)
>>> q.append(5)
>>> q
deque([3, 4, 5], maxlen=3)


deque 类可以被用在任何你只需要一个简单队列数据结构的场合。 如果你不设置最大队列大小，那么就会得到一个无限大小队列，你可以在队列的两端执行添加和弹出元素的操作。

>>> q = deque()
>>> q.append(1)
>>> q.append(2)
>>> q.append(3)
>>> q
deque([1, 2, 3])
>>> q.appendleft(4)
>>> q
deque([4, 1, 2, 3])
>>> q.pop()
3
>>> q
deque([4, 1, 2])
>>> q.popleft()
4

